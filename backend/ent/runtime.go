// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/utibori-jp/yojitsu-tracker/ent/schema"
	"github.com/utibori-jp/yojitsu-tracker/ent/todo"
	"github.com/utibori-jp/yojitsu-tracker/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	todoMixin := schema.Todo{}.Mixin()
	todoMixinFields0 := todoMixin[0].Fields()
	_ = todoMixinFields0
	todoFields := schema.Todo{}.Fields()
	_ = todoFields
	// todoDescCreatedAt is the schema descriptor for created_at field.
	todoDescCreatedAt := todoMixinFields0[0].Descriptor()
	// todo.DefaultCreatedAt holds the default value on creation for the created_at field.
	todo.DefaultCreatedAt = todoDescCreatedAt.Default.(func() time.Time)
	// todoDescUpdatedAt is the schema descriptor for updated_at field.
	todoDescUpdatedAt := todoMixinFields0[1].Descriptor()
	// todo.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	todo.DefaultUpdatedAt = todoDescUpdatedAt.Default.(func() time.Time)
	// todo.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	todo.UpdateDefaultUpdatedAt = todoDescUpdatedAt.UpdateDefault.(func() time.Time)
	// todoDescName is the schema descriptor for name field.
	todoDescName := todoFields[0].Descriptor()
	// todo.NameValidator is a validator for the "name" field. It is called by the builders before save.
	todo.NameValidator = func() func(string) error {
		validators := todoDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// todoDescDescription is the schema descriptor for description field.
	todoDescDescription := todoFields[1].Descriptor()
	// todo.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	todo.DescriptionValidator = todoDescDescription.Validators[0].(func(string) error)
	// todoDescEstimatedTimeSec is the schema descriptor for estimated_time_sec field.
	todoDescEstimatedTimeSec := todoFields[2].Descriptor()
	// todo.DefaultEstimatedTimeSec holds the default value on creation for the estimated_time_sec field.
	todo.DefaultEstimatedTimeSec = todoDescEstimatedTimeSec.Default.(int32)
	// todo.EstimatedTimeSecValidator is a validator for the "estimated_time_sec" field. It is called by the builders before save.
	todo.EstimatedTimeSecValidator = todoDescEstimatedTimeSec.Validators[0].(func(int32) error)
	// todoDescActualTimeSec is the schema descriptor for actual_time_sec field.
	todoDescActualTimeSec := todoFields[3].Descriptor()
	// todo.DefaultActualTimeSec holds the default value on creation for the actual_time_sec field.
	todo.DefaultActualTimeSec = todoDescActualTimeSec.Default.(int32)
	// todo.ActualTimeSecValidator is a validator for the "actual_time_sec" field. It is called by the builders before save.
	todo.ActualTimeSecValidator = todoDescActualTimeSec.Validators[0].(func(int32) error)
	// todoDescReflectionMemo is the schema descriptor for reflection_memo field.
	todoDescReflectionMemo := todoFields[7].Descriptor()
	// todo.ReflectionMemoValidator is a validator for the "reflection_memo" field. It is called by the builders before save.
	todo.ReflectionMemoValidator = todoDescReflectionMemo.Validators[0].(func(string) error)
	userMixin := schema.User{}.Mixin()
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userMixinFields0[0].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userMixinFields0[1].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[0].Descriptor()
	// user.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	user.UsernameValidator = userDescUsername.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[1].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescPasswordHash is the schema descriptor for password_hash field.
	userDescPasswordHash := userFields[2].Descriptor()
	// user.PasswordHashValidator is a validator for the "password_hash" field. It is called by the builders before save.
	user.PasswordHashValidator = userDescPasswordHash.Validators[0].(func(string) error)
}
